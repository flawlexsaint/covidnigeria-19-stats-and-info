{"version":3,"sources":["Component/Context/NigeriaContextApi.jsx","Component/Helpers/States.jsx","Component/Context/ResourcesContext.jsx","Component/Helpers/Resources.jsx","Component/Helpers/Pagination.jsx","Component/Helpers/Header.jsx","Component/Helpers/Navbar.jsx","Component/Pages/Landing_Page.jsx","App.jsx","serviceWorker.js","index.js"],"names":["NigeriaContextApi","createContext","NigeriaContextProvider","props","useState","States","setCountries","useEffect","a","Axios","get","rawData","data","states","fetch_data","Provider","value","children","StatesComponent","CountryList","useContext","map","State","className","key","state","confirmedCases","casesOnAdmission","discharged","death","ResourcesContext","ResourcesContextProvider","Articles","setArticles","Status","TotalResults","setTotalResults","loading","setLoading","CurrentPage","setCurrentPage","ArticlePerPage","items","data_status","totalResults","data_result","articles","TotalArticle","length","indexOfLastPost","indexOfFirstPost","currentArticle","slice","handleChange","pageNumber","Resources","ArticlesList","article","enclosure","link","author","guid","src","alt","href","title","Pagination","pageNumbers","i","Math","ceil","push","number","to","onClick","Header","Carousel","id","data-ride","floor","random","Navbar","Landing","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eb8bbd3b.chunk.js","sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport const NigeriaContextApi = createContext();\r\n\r\nconst NigeriaContextProvider = (props) => {\r\n  const [States, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetch_data = async () => {\r\n      const rawData = await Axios.get(\"https://covidnigeria.herokuapp.com/api\");\r\n      const data = await rawData.data.data.states;\r\n      setCountries(data);\r\n    };\r\n    fetch_data();\r\n  }, []);\r\n  return (\r\n    <NigeriaContextApi.Provider value={{ States }}>\r\n      {props.children}\r\n    </NigeriaContextApi.Provider>\r\n  );\r\n};\r\n\r\nexport default NigeriaContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { NigeriaContextApi } from \"../Context/NigeriaContextApi\";\r\n\r\nconst StatesComponent = () => {\r\n  const { States } = useContext(NigeriaContextApi);\r\n  const CountryList = States.map((State) => {\r\n    return (\r\n      State && (\r\n        <tbody>\r\n          <tr className=\"\">\r\n            <th key={State.state}>{State.state}</th>\r\n            <td key={State.confirmedCases}>{State.confirmedCases}</td>\r\n            <td key={State.casesOnAdmission}>{State.casesOnAdmission}</td>\r\n            <td key={State.discharged}>{State.discharged}</td>\r\n            <td key={State.death}>{State.death}</td>\r\n          </tr>\r\n        </tbody>\r\n      )\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"text-center table-responsive shadow\">\r\n      <table className=\"table shadow table-hover\">\r\n        <thead>\r\n          <tr className=\"\">\r\n            <th>State</th>\r\n            <th>Confirmed Cases</th>\r\n            <th>In Recovery</th>\r\n            <th>Discharged</th>\r\n            <th>Deaths</th>\r\n          </tr>\r\n        </thead>\r\n        {CountryList}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatesComponent;\r\n","import React, { useEffect, useState, createContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport const ResourcesContext = createContext();\r\n\r\nconst ResourcesContextProvider = (props) => {\r\n  const [Articles, setArticles] = useState([]);\r\n  const [Status, setStatus] = useState([]);\r\n  const [TotalResults, setTotalResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [CurrentPage, setCurrentPage] = useState(1);\r\n  const [ArticlePerPage, setArticlePerPage] = useState(5);\r\n  const url =\r\n    \"https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Frss.app%2Ffeeds%2FxHRHhiWtoxYj0qbL.xml\";\r\n\r\n  useEffect(() => {\r\n    const fetch_data = async () => {\r\n      setLoading(true);\r\n      const rawData = await Axios.get(url);\r\n      const data_status = await rawData.data.items;\r\n      const data_result = await rawData.data.totalResults;\r\n      const data_article = await rawData.data.articles;\r\n      // setStatus(data_status);\r\n      setTotalResults(data_result);\r\n      setArticles(data_status);\r\n      setLoading(false);\r\n    };\r\n    fetch_data();\r\n  }, []);\r\n\r\n  const TotalArticle = Articles.length;\r\n  const indexOfLastPost = CurrentPage * ArticlePerPage;\r\n  const indexOfFirstPost = indexOfLastPost - ArticlePerPage;\r\n  const currentArticle = Articles.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const handleChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <ResourcesContext.Provider\r\n      value={{\r\n        currentArticle,\r\n        Status,\r\n        TotalResults,\r\n        loading,\r\n        ArticlePerPage,\r\n        TotalArticle,\r\n        handleChange,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ResourcesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ResourcesContextProvider;\r\n\r\n// \"https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Frss.app%2Ffeeds%2FxHRHhiWtoxYj0qbL.xml\"\r\n\r\n// \"http://newsapi.org/v2/top-headlines?q=ncdc&country=ng&category=health&apiKey=eebab879f28a4bde815c864b57716b34\";\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { ResourcesContext } from \"../Context/ResourcesContext\";\r\n\r\nconst Resources = () => {\r\n  const { currentArticle, loading } = useContext(ResourcesContext);\r\n  const ArticlesList = currentArticle.map((article) => {\r\n    return article.enclosure.link || article.author === \"Reuters\" ? (\r\n      <div\r\n        className=\"col-sm-6 col-md-6 col-lg-12 col-xl-12 mb-4\"\r\n        key={article.guid}\r\n      >\r\n        <div className=\"card h-100 shadow\">\r\n          <img\r\n            src={article.enclosure.link}\r\n            className=\"card-img-top h-60\"\r\n            alt=\"...\"\r\n          />\r\n          <div className=\"card-body\">\r\n            <a href={article.link}>\r\n              <h6 className=\"card-title\">{article.title}</h6>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  });\r\n  return loading ? (\r\n    <div className=\"text-center\">\r\n      <h3>Loading</h3>\r\n    </div>\r\n  ) : (\r\n    <div className=\"row mt-4\">{ArticlesList}</div>\r\n  );\r\n};\r\n\r\nexport default Resources;\r\n","import React, { useContext } from \"react\";\r\nimport { ResourcesContext } from \"../Context/ResourcesContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Pagination = () => {\r\n  const { ArticlePerPage, TotalArticle, handleChange } = useContext(\r\n    ResourcesContext\r\n  );\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(TotalArticle / ArticlePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {pageNumbers.map((number) => (\r\n            <li key={number} className=\"page-item\">\r\n              <Link to={number}\r\n                onClick={() => handleChange(number)}\r\n                href={number}\r\n                className=\"page-link\"\r\n              >\r\n                {number}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { ResourcesContext } from \"../Context/ResourcesContext\";\r\n\r\nconst Header = () => {\r\n  const { currentArticle, loading } = useContext(ResourcesContext);\r\n  const Carousel = currentArticle.map((article) => {\r\n    return article.enclosure.link || article.author === \"Reuters\" ? (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 col-mg-6 col-lg-6 col-xl-6\">\r\n          <img\r\n            src={article.enclosure.link}\r\n            className=\"d-block w-100 card-img\"\r\n            alt=\"...\"\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-12 col-mg-6 col-lg-6 col-xl-6 text-primary flexify\">\r\n          <div className=\"d-none d-md-block\">\r\n            <a href={article.link}>\r\n              <h2 className=\"text-center p-3\">{article.title}</h2>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  });\r\n  return (\r\n    <div\r\n      id=\"carouselExampleCaptions\"\r\n      className=\"carousel slide shadow mb-5\"\r\n      data-ride=\"carousel\"\r\n    >\r\n      <div className=\"carousel-inner\">\r\n        <div className=\"carousel-item active\">\r\n          {Carousel[Math.floor(Math.random() * Carousel.length)]}\r\n        </div>\r\n        <div className=\"carousel-item\">\r\n          {Carousel[Math.floor(Math.random() * Carousel.length)]}\r\n        </div>\r\n        <div className=\"carousel-item\">\r\n          {Carousel[Math.floor(Math.random() * Carousel.length)]}\r\n        </div>\r\n        <div className=\"carousel-item\">\r\n          {Carousel[Math.floor(Math.random() * Carousel.length)]}\r\n        </div>\r\n        <div className=\"carousel-item\">\r\n          {Carousel[Math.floor(Math.random() * Carousel.length)]}\r\n        </div>\r\n        <div className=\"carousel-item\">\r\n          {Carousel[Math.floor(Math.random() * Carousel.length)]}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <nav className=\"navbar navbar-light bg-light fixed-top shadow-lg\">\r\n        <a className=\"navbar-brand text-primary\" href=\"#\">COVID- 19 STATS</a>\r\n      </nav><br/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport StatesComponent from \"../Helpers/States\";\r\nimport Resources from \"../Helpers/Resources\";\r\nimport { Pagination } from \"../Helpers/Pagination\";\r\nimport Header from \"../Helpers/Header\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Navbar from \"../Helpers/Navbar\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Navbar />\r\n      <Header />\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 col-md-12 col-lg-9 col-xl-9 overflow-auto\">\r\n          <StatesComponent />\r\n        </div>\r\n        <div className=\"col-sm-12 col-md-12 col-lg-3 col-xl-3\">\r\n          <BrowserRouter>\r\n            <Resources />\r\n            <Pagination />\r\n          </BrowserRouter>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport '../src/App.css'\r\nimport { Landing } from \"./Component/Helpers\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"\">\r\n      <Landing />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport NigeriaContextApiProvider from \"./Component/Context/NigeriaContextApi\";\nimport UpdateContextProvider from \"./Component/Context/ResourcesContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <NigeriaContextApiProvider>\n      <UpdateContextProvider>\n        <App />\n      </UpdateContextProvider>\n    </NigeriaContextApiProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}